version: '3'

# the build order is guaranteed to be
# 1. zoo
# 2. rabbitmq
# 3. orchestrator
# 4. master
# 5. slave

services:
  zoo:
    image: zookeeper
    container_name: zoo
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
  
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.8.3
    restart: on-failure
  
  # if running locally then change the ports of the orchestrator to "5050:80" to avoid port conflicts and resulting in build failure

  orchestrator:
    build: ./orchestrator
    image: orchestrator:latest
    container_name: orchestrator
    command: sh -c "sleep 20 && python orchestrator.py"
    ports:
      - "80:80"
    environment:
      - TEAM_NAME=CC_0125_0172_0242_1557
    volumes:
      - ./orchestrator:/orchestrator
    links:
      - rabbitmq
      - zoo
    depends_on:
      - rabbitmq 
      - zoo
    restart: on-failure
  
  master:
    build: ./worker
    image: master:latest
    container_name: master
    command: sh -c "sleep 25 && python master_slave.py"
    environment:
      - TEAM_NAME=CC_0125_0172_0242_1557
      - MASTER=1
    volumes:
      - ./master:/master
    links:
      - rabbitmq
      - zoo
    depends_on:
      - rabbitmq
      - zoo
    restart: on-failure

  slave:
    build: ./worker
    image: slave:latest
    container_name: slave
    command: sh -c "sleep 30 && python master_slave.py"
    environment:
      - TEAM_NAME=CC_0125_0172_0242_1557
      - MASTER=0
    volumes:
      - ./slave:/slave
    links:
      - rabbitmq
      - zoo
    depends_on:
      - rabbitmq
      - zoo
    restart: on-failure

# do not use the below configuration

  # master:
  #   build: ./master
  #   image: master:latest
  #   container_name: master
  #   command: sh -c "sleep 20 && python master_slave.py"
  #   environment:
  #   - TEAM_NAME=CC_0125_0172_0242_1557
  #   - MASTER=1
  #   volumes:
  #   - ./master:/master
  #   links:
  #   - rabbitmq
  #   - zoo
  #   depends_on:
  #   - rabbitmq
  #   - zoo
  #   restart: on-failure

  # slave:
  #   build: ./slave
  #   image: slave:latest
  #   container_name: slave
  #   command: sh -c "sleep 25 && python master_slave.py"
  #   environment:
  #   - TEAM_NAME=CC_0125_0172_0242_1557
  #   - MASTER=0
  #   volumes:
  #   - ./slave:/slave
  #   links:
  #   - rabbitmq
  #   - zoo
  #   depends_on:
  #   - rabbitmq
  #   - zoo
  #   restart: on-failure
